///////////////////////////////////////////////////////////////////////////////
///  CAppConfig.h
///  Definition of Application Configuration Class
///
///  @remarks it's not a singelton
///
///  @author Maciej Lichoñ @date 2010-10-16
///////////////////////////////////////////////////////////////////////////////

#include <string>
#include <list>
using namespace std;

///////////////////////////////////////////////////////////////////////////////
///  CAppConfig
///  A class that provides serialization and deserialization of config.
///
///
///  @remarks it's not a singelton
///
///  @author Maciej Lichoñ @date 2010-10-16
///////////////////////////////////////////////////////////////////////////////
/////// comment generated by CommentMakerPro from www.FeinSoftware.com ////////
class CAppConfig
{
	
public:
	 string _conffile;
	 bool _recordOnInit;
	 string _recordIL;
	 string _recordIR;
	 list<string> _InputFrameFiles;
	 int _camL;
	 int _camR;

	friend class boost::serialization::access;

	///////////////////////////////////////////////////////////////////////////////
	///  public overloaded constructor  CAppConfig
	///  Constructor that creates only an empty object
	///
	///  This function doesn't return a value
	///
	///  @remarks 
	///
	///  @see CAppConfig(string conf);
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	
	CAppConfig();

	///////////////////////////////////////////////////////////////////////////////
	///  public overloaded constructor  CAppConfig
	///  Creates a config from given config file
	///
	///  @param [in]       conf std::string    Input Config file
	///
	///  This function doesn't return a value
	///
	///  @remarks <TODO: insert remarks here>
	///
	///  @see <TODO: insert text here>
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	CAppConfig(string conf);
	///////////////////////////////////////////////////////////////////////////////
	///  public destructor  ~CAppConfig
	///  standard destructor
	///
	///  This function doesn't return a value
	///
	///  @remarks 
	///
	///  @see 
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	/////// comment generated by CommentMakerPro from www.FeinSoftware.com ////////
	~CAppConfig();

	///////////////////////////////////////////////////////////////////////////////
	///  public  Load
	///  Tries to deserialize a file
	///
	///  @return bool true if success
	///
	///  @remarks 
	///
	///  @see Save
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	/////// comment generated by CommentMakerPro from www.FeinSoftware.com ////////
	bool Load();
	///////////////////////////////////////////////////////////////////////////////
	///  public  LoadDefaults
	///  Load's default config
	///
	///  @return CAppConfig * return standard config class
	///
	///  @remarks conf file must exist
	///
	///  @see SaveDefaults
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	
	CAppConfig * LoadDefaults();
	///////////////////////////////////////////////////////////////////////////////
	///  public  SaveDefaults
	///  Saves default configuration into conf.cfg file
	///
	///  @return bool true if success
	///
	///  @remarks 
	///
	///  @see 
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	bool SaveDefaults();
	///////////////////////////////////////////////////////////////////////////////
	///  public  serialize
	///  serializes/deserializes this object with boost
	///
	///  @param [in, out]  ar archive &    call to boost documentation: archive
	///  @param [in]       version const unsigned int    call to boost documentation: archive
	///
	///  This function doesn't return a value
	///
	///  @remarks 
	///
	///  @see Save,Load
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	template<class archive>
	void serialize(archive& ar, const unsigned int version);
	///////////////////////////////////////////////////////////////////////////////
	///  public  Save
	///  Save's the configuration
	///
	///  This function doesn't return a value
	///
	///  @remarks file doesn't need to exist
	///
	///  @see Load, SaveDefaults
	///
	///  @author Maciej Lichoñ @date 2010-10-16
	///////////////////////////////////////////////////////////////////////////////
	void Save();
};